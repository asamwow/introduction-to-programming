#+PROPERTY: header-args :results output

* Intro
#+title: Arrays
So the last two days we learned how to add and assign variables to text and numbers. We also learned to create functions that work just like they do in math class.

* Lists
Javascript can handle lists. In fact, javascript can handle many kinds of lists. Today we will focus on what programmers call an *array*. They can be created like this.
#+BEGIN_SRC js
numbers = [ 0, 1, 99, 1000 ]
animals = [ "pig", "cow", "chicken" ]
#+END_SRC

* Definition of "Index"

Could someone tell me where they have heard the word "index" before?

* Indexing

In the back of your science textbooks you might have an *index* which gives you the page numbers of vocabulary words. This is similar to what we are referring to when we talk about an index of an array. But instead of the page number, the index refers to the ordered position of the vocab word in the book starting at 0. So the first vocab word has an index of 0, the second has 1, and the third has an index of 2.

* Indexing Example
In this example we are giving the index [1] to the list of items. We use the *[]* to make it clear to javascript we want to index the list.
#+BEGIN_SRC js
  my_array = [ "pig", "cow", "chicken" ]
  console.log(my_array[1])
#+END_SRC

* Empty List
Lists can be created with no items.
#+BEGIN_SRC js
  empty_array = []
  console.log(empty_array)
#+END_SRC

* Adding to List
Once created, either empty or with items, lists can be added to using the *push* command like this.
#+BEGIN_SRC js
  array = []
  array.push("cow")
  array.push("goat")
  console.log(array)
#+END_SRC

* Removing from list
We can use the *filter* command to filter the list. In this case we filter items that are not "cow".
#+BEGIN_SRC js
my_array = [ "pig", "cow", "chicken" ]
my_array = my_array.filter(item => item != "cow")
console.log(my_array)
#+END_SRC

* Deleting by index
Remember we discussed that an index is a number referring to a position of an item on a list. We can use the *splice* command to remove an item only using the index. The second argument states how many elements to remove.
#+BEGIN_SRC js
  my_array = [ "pig", "cow", "chicken" ]
  my_array.splice(1, 1)
  console.log(my_array)
#+END_SRC

* 2 Dimensional Arrays
Arrays can hold anything. This includes other arrays. So the following array has different animals separated by species.
#+BEGIN_SRC js
animals = [ [ "Mocking", "Blue", "Cardinal" ],
            [ "Polar", "Grizzly", "Black" ],
            [ "Retriever", "Poodle", "Lab" ] ]
#+END_SRC

* Tic Tac Toe
To practice using 2 dimensional arrays, we will play tic tac toe with a partner. It will not automatically determine a winner but will just keep track of the state of the board.

* Game Board
#+BEGIN_SRC js
  game_board = [ [ " ", " ", " " ], [ " ", " ", " " ], [ " ", " ", " " ] ]
  console.log(game_board[0])
  console.log(game_board[1])
  console.log(game_board[2])
#+END_SRC
