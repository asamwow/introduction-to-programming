#+PROPERTY: header-args :results output

* Intro

#+title: Functions

Yesterday we learned about the javascript interpreter and how it could handle numbers, text, and variables. We can add them together with the "+" symbol. We can set variables with the "=" sign. And lastly we learned we could combine the plus and the equals to modify a variable relative to its previous value.

* Algebra
$$ y = mx + b $$
We all know functions like this from math class. This is the equation for a straight line. The input to the function is $x$ and the output is $y$. $m$ and $b$ are constants aka they are always the same value

* Javascript Functions
We can create this function in javascript which would look like this.
#+BEGIN_SRC js
  function y(x) {
      return 2 * x + 5
  }
#+END_SRC
What is our slope ( $m$ ) and y-intercept ( $b$ ) in this example?


Answer: $m = 2, b = 5$

* Invoking Functions
When we want the computer to return the output of a function, we write what programmers call the *invocation* of the function. It is exactly the same way we write it in algebra. We put the name of the function followed by parentheses and the parameters like $y(10)$.

* Javascript Invocation

This is executing a function in javascript.

#+BEGIN_SRC js
  function y(x) {
      return 2 * x + 5
  }

  console.log( y(4) )
#+END_SRC
